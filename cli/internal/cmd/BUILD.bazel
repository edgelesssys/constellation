load("@io_bazel_rules_go//go:def.bzl", "go_library")
load("//bazel/go:go_test.bzl", "go_test")

go_library(
    name = "cmd",
    srcs = [
        "cloud.go",
        "cmd.go",
        "config.go",
        "configfetchmeasurements.go",
        "configgenerate.go",
        "configinstancetypes.go",
        "configkubernetesversions.go",
        "configmigrate.go",
        "create.go",
        "iamcreate.go",
        "iamdestroy.go",
        "iamupgradeapply.go",
        "init.go",
        "log.go",
        "manualtfstatemigration.go",
        "mini.go",
        "minidown.go",
        "miniup.go",
        "miniup_cross.go",
        "miniup_linux_amd64.go",
        "recover.go",
        "spinner.go",
        "status.go",
        "terminate.go",
        "tfmigrationclient.go",
        "upgrade.go",
        "upgradeapply.go",
        "upgradecheck.go",
        "userinteraction.go",
        "validargs.go",
        "verify.go",
        "version.go",
    ],
    importpath = "github.com/edgelesssys/constellation/v2/cli/internal/cmd",
    visibility = ["//cli:__subpackages__"],
    deps = [
        "//bootstrapper/initproto",
        "//cli/internal/cloudcmd",
        "//cli/internal/clusterid",
        "//cli/internal/featureset",
        "//cli/internal/helm",
        "//cli/internal/iamid",
        "//cli/internal/kubernetes",
        "//cli/internal/libvirt",
        "//cli/internal/terraform",
        "//cli/internal/upgrade",
        "//disk-mapper/recoverproto",
        "//internal/api/attestationconfigapi",
        "//internal/api/fetcher",
        "//internal/api/versionsapi",
        "//internal/atls",
        "//internal/attestation/measurements",
        "//internal/attestation/variant",
        "//internal/cloud/azureshared",
        "//internal/cloud/cloudprovider",
        "//internal/cloud/gcpshared",
        "//internal/cloud/openstack",
        "//internal/compatibility",
        "//internal/config",
        "//internal/config/instancetypes",
        "//internal/config/migration",
        "//internal/constants",
        "//internal/crypto",
        "//internal/deploy/helm",
        "//internal/file",
        "//internal/grpc/dialer",
        "//internal/grpc/grpclog",
        "//internal/grpc/retry",
        "//internal/imagefetcher",
        "//internal/kms/uri",
        "//internal/kubernetes/kubectl",
        "//internal/license",
        "//internal/logger",
        "//internal/retry",
        "//internal/semver",
        "//internal/sigstore",
        "//internal/sigstore/keyselect",
        "//internal/versions",
        "//operators/constellation-node-operator/api/v1alpha1",
        "//verify/verifyproto",
        "@com_github_google_go_sev_guest//abi",
        "@com_github_google_go_sev_guest//kds",
        "@com_github_google_uuid//:uuid",
        "@com_github_mattn_go_isatty//:go-isatty",
        "@com_github_siderolabs_talos_pkg_machinery//config/encoder",
        "@com_github_spf13_afero//:afero",
        "@com_github_spf13_cobra//:cobra",
        "@in_gopkg_yaml_v3//:yaml_v3",
        "@io_k8s_api//core/v1:core",
        "@io_k8s_apimachinery//pkg/runtime",
        "@io_k8s_client_go//dynamic",
        "@io_k8s_client_go//tools/clientcmd",
        "@io_k8s_client_go//tools/clientcmd/api/latest",
        "@io_k8s_sigs_yaml//:yaml",
        "@org_golang_google_grpc//:go_default_library",
        "@org_golang_x_mod//semver",
        "@org_uber_go_zap//zapcore",
    ] + select({
        "@io_bazel_rules_go//go/platform:android_amd64": [
            "@org_golang_x_sys//unix",
        ],
        "@io_bazel_rules_go//go/platform:linux_amd64": [
            "@org_golang_x_sys//unix",
        ],
        "//conditions:default": [],
    }),
)

go_test(
    name = "cmd_test",
    srcs = [
        "cloud_test.go",
        "configfetchmeasurements_test.go",
        "configgenerate_test.go",
        "create_test.go",
        "iamcreate_test.go",
        "iamdestroy_test.go",
        "init_test.go",
        "recover_test.go",
        "spinner_test.go",
        "status_test.go",
        "terminate_test.go",
        "upgradeapply_test.go",
        "upgradecheck_test.go",
        "userinteraction_test.go",
        "validargs_test.go",
        "verifier_test.go",
        "verify_test.go",
        "version_test.go",
    ],
    embed = [":cmd"],
    deps = [
        "//bootstrapper/initproto",
        "//cli/internal/cloudcmd",
        "//cli/internal/clusterid",
        "//cli/internal/iamid",
        "//cli/internal/kubernetes",
        "//cli/internal/terraform",
        "//cli/internal/upgrade",
        "//disk-mapper/recoverproto",
        "//internal/api/attestationconfigapi",
        "//internal/api/versionsapi",
        "//internal/atls",
        "//internal/attestation/measurements",
        "//internal/attestation/variant",
        "//internal/cloud/cloudprovider",
        "//internal/cloud/gcpshared",
        "//internal/config",
        "//internal/constants",
        "//internal/crypto/testvector",
        "//internal/deploy/helm",
        "//internal/file",
        "//internal/grpc/atlscredentials",
        "//internal/grpc/dialer",
        "//internal/grpc/testdialer",
        "//internal/kms/uri",
        "//internal/license",
        "//internal/logger",
        "//internal/semver",
        "//internal/sigstore",
        "//internal/versions",
        "//operators/constellation-node-operator/api/v1alpha1",
        "//verify/verifyproto",
        "@com_github_spf13_afero//:afero",
        "@com_github_spf13_cobra//:cobra",
        "@com_github_stretchr_testify//assert",
        "@com_github_stretchr_testify//require",
        "@in_gopkg_yaml_v3//:yaml_v3",
        "@io_k8s_api//core/v1:core",
        "@io_k8s_apimachinery//pkg/apis/meta/v1:meta",
        "@io_k8s_apimachinery//pkg/apis/meta/v1/unstructured",
        "@io_k8s_apimachinery//pkg/runtime",
        "@org_golang_google_grpc//:go_default_library",
        "@org_golang_google_grpc//codes",
        "@org_golang_google_grpc//status",
        "@org_golang_x_mod//semver",
        "@org_uber_go_goleak//:goleak",
    ],
)
