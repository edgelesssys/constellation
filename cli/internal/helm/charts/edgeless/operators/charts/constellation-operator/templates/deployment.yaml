apiVersion: v1
kind: ServiceAccount
metadata:
  name: constellation-operator-controller-manager
  namespace: {{ .Release.Namespace }}
  labels:
  {{- include "chart.labels" . | nindent 4 }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: constellation-operator-controller-manager
  namespace: {{ .Release.Namespace }}
  labels:
    control-plane: controller-manager
  {{- include "chart.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.controllerManager.replicas }}
  selector:
    matchLabels:
      control-plane: controller-manager
    {{- include "chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        control-plane: controller-manager
      {{- include "chart.selectorLabels" . | nindent 8 }}
      annotations:
        kubectl.kubernetes.io/default-container: manager
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        env:
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ .Values.kubernetesClusterDomain }}
        image: {{ .Values.controllerManager.kubeRbacProxy.image.repository }}:{{ .Values.controllerManager.kubeRbacProxy.image.tag
          | default .Chart.AppVersion }}
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources: {{- toYaml .Values.controllerManager.kubeRbacProxy.resources | nindent
          10 }}
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        env:
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ .Values.kubernetesClusterDomain }}
        - name: CONSTEL_CSP
          value: {{ .Values.csp }}
        - name: constellation-uid
          value: {{ .Values.constellationUID }}
        image: {{ .Values.controllerManager.manager.image }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources: {{- toYaml .Values.controllerManager.manager.resources | nindent 10 }}
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /etc/kubernetes/pki/etcd
          name: etcd-certs
        - mountPath: /host/usr/lib/os-release
          name: usr-lib-os-release
        - mountPath: /etc/os-release
          name: etc-os-release
        - mountPath: /etc/azure
          name: azureconfig
          readOnly: true
        - mountPath: /etc/gce
          name: gceconf
          readOnly: true
      nodeSelector:
        node-role.kubernetes.io/control-plane: ""
      securityContext:
        runAsUser: 0
      serviceAccountName: constellation-operator-controller-manager
      terminationGracePeriodSeconds: 10
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
        operator: Exists
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Exists
      volumes:
      - hostPath:
          path: /etc/kubernetes/pki/etcd
          type: Directory
        name: etcd-certs
      - hostPath:
          path: /usr/lib/os-release
          type: File
          optional: true
        name: usr-lib-os-release
      - hostPath:
          path: /etc/os-release
          type: File
          optional: true
        name: etc-os-release
      - name: azureconfig
        secret:
          optional: true
          secretName: azureconfig
      - configMap:
          name: gceconf
          optional: true
        name: gceconf
