load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "terraform",
    srcs = ["assets.go"],
    embedsrcs = [
        "infrastructure/aws/.terraform.lock.hcl",
        "infrastructure/aws/main.tf",
        "infrastructure/aws/modules/instance_group/main.tf",
        "infrastructure/aws/modules/instance_group/variables.tf",
        "infrastructure/aws/modules/jump_host/main.tf",
        "infrastructure/aws/modules/jump_host/output.tf",
        "infrastructure/aws/modules/jump_host/variables.tf",
        "infrastructure/aws/modules/load_balancer_target/main.tf",
        "infrastructure/aws/modules/load_balancer_target/output.tf",
        "infrastructure/aws/modules/load_balancer_target/variables.tf",
        "infrastructure/aws/modules/public_private_subnet/main.tf",
        "infrastructure/aws/modules/public_private_subnet/output.tf",
        "infrastructure/aws/modules/public_private_subnet/variables.tf",
        "infrastructure/aws/outputs.tf",
        "infrastructure/aws/variables.tf",
        "infrastructure/azure/.terraform.lock.hcl",
        "infrastructure/azure/main.tf",
        "infrastructure/azure/modules/jump_host/main.tf",
        "infrastructure/azure/modules/jump_host/outputs.tf",
        "infrastructure/azure/modules/jump_host/variables.tf",
        "infrastructure/azure/modules/load_balancer_backend/main.tf",
        "infrastructure/azure/modules/load_balancer_backend/outputs.tf",
        "infrastructure/azure/modules/load_balancer_backend/variables.tf",
        "infrastructure/azure/modules/scale_set/main.tf",
        "infrastructure/azure/modules/scale_set/variables.tf",
        "infrastructure/azure/outputs.tf",
        "infrastructure/azure/variables.tf",
        "infrastructure/gcp/.terraform.lock.hcl",
        "infrastructure/gcp/main.tf",
        "infrastructure/gcp/modules/instance_group/main.tf",
        "infrastructure/gcp/modules/instance_group/outputs.tf",
        "infrastructure/gcp/modules/instance_group/variables.tf",
        "infrastructure/gcp/modules/internal_load_balancer/main.tf",
        "infrastructure/gcp/modules/internal_load_balancer/variables.tf",
        "infrastructure/gcp/modules/jump_host/main.tf",
        "infrastructure/gcp/modules/jump_host/outputs.tf",
        "infrastructure/gcp/modules/jump_host/variables.tf",
        "infrastructure/gcp/modules/loadbalancer/main.tf",
        "infrastructure/gcp/modules/loadbalancer/variables.tf",
        "infrastructure/gcp/outputs.tf",
        "infrastructure/gcp/variables.tf",
        "infrastructure/iam/aws/.terraform.lock.hcl",
        "infrastructure/iam/aws/README.md",
        "infrastructure/iam/aws/main.tf",
        "infrastructure/iam/aws/outputs.tf",
        "infrastructure/iam/aws/variables.tf",
        "infrastructure/iam/azure/.terraform.lock.hcl",
        "infrastructure/iam/azure/README.md",
        "infrastructure/iam/azure/main.tf",
        "infrastructure/iam/azure/outputs.tf",
        "infrastructure/iam/azure/variables.tf",
        "infrastructure/iam/gcp/.terraform.lock.hcl",
        "infrastructure/iam/gcp/README.md",
        "infrastructure/iam/gcp/main.tf",
        "infrastructure/iam/gcp/outputs.tf",
        "infrastructure/iam/gcp/variables.tf",
        "infrastructure/openstack/.terraform.lock.hcl",
        "infrastructure/openstack/main.tf",
        "infrastructure/openstack/modules/instance_group/main.tf",
        "infrastructure/openstack/modules/instance_group/outputs.tf",
        "infrastructure/openstack/modules/instance_group/variables.tf",
        "infrastructure/openstack/modules/loadbalancer/main.tf",
        "infrastructure/openstack/modules/loadbalancer/variables.tf",
        "infrastructure/openstack/outputs.tf",
        "infrastructure/openstack/variables.tf",
        "infrastructure/qemu/.terraform.lock.hcl",
        "infrastructure/qemu/main.tf",
        "infrastructure/qemu/modules/instance_group/domain.xsl",
        "infrastructure/qemu/modules/instance_group/main.tf",
        "infrastructure/qemu/modules/instance_group/outputs.tf",
        "infrastructure/qemu/modules/instance_group/tdx_domain.xsl",
        "infrastructure/qemu/modules/instance_group/variables.tf",
        "infrastructure/qemu/outputs.tf",
        "infrastructure/qemu/variables.tf",
    ],
    importpath = "github.com/edgelesssys/constellation/v2/terraform",
    visibility = ["//visibility:public"],
)
