load("@io_bazel_rules_go//go:def.bzl", "go_library")
load("//bazel/go:go_test.bzl", "go_test")

go_library(
    name = "sgreconciler",
    srcs = [
        "nodejoin_watcher.go",
        "scalinggroup_controller.go",
        "sgreconciler.go",
    ],
    importpath = "github.com/edgelesssys/constellation/v2/operators/constellation-node-operator/v2/sgreconciler",
    visibility = ["//visibility:public"],
    deps = [
        "//internal/constants",
        "//operators/constellation-node-operator/api/v1alpha1",
        "//operators/constellation-node-operator/internal/cloud/api",
        "//operators/constellation-node-operator/internal/executor",
        "@io_k8s_api//core/v1:core",
        "@io_k8s_apimachinery//pkg/api/errors",
        "@io_k8s_apimachinery//pkg/apis/meta/v1:meta",
        "@io_k8s_apimachinery//pkg/runtime",
        "@io_k8s_apimachinery//pkg/types",
        "@io_k8s_client_go//util/retry",
        "@io_k8s_sigs_controller_runtime//:controller-runtime",
        "@io_k8s_sigs_controller_runtime//pkg/builder",
        "@io_k8s_sigs_controller_runtime//pkg/client",
        "@io_k8s_sigs_controller_runtime//pkg/event",
        "@io_k8s_sigs_controller_runtime//pkg/handler",
        "@io_k8s_sigs_controller_runtime//pkg/log",
        "@io_k8s_sigs_controller_runtime//pkg/predicate",
    ],
)

go_test(
    name = "sgreconciler_test",
    srcs = [
        "scalinggroup_controller_env_test.go",
        "scalinggroup_controller_test.go",
        "suite_test.go",
    ],
    # keep
    count = 1,
    # keep
    data = [
        "//bazel/envtest:tools",
        "//operators/constellation-node-operator:crd_bases",
    ],
    embed = [":sgreconciler"],
    # keep
    env = {
        "KUBEBUILDER_ASSETS": "../../../$(rootpath //bazel/envtest:tools)",
    },
    # keep
    gotags = ["integration"],
    # keep
    tags = ["requires-network"],
    deps = [
        "//internal/constants",
        "//operators/constellation-node-operator/api/v1alpha1",
        "//operators/constellation-node-operator/internal/cloud/api",
        "//operators/constellation-node-operator/internal/constants",
        "//operators/constellation-node-operator/internal/executor",
        "@com_github_onsi_ginkgo_v2//:ginkgo",
        "@com_github_onsi_gomega//:gomega",
        "@com_github_stretchr_testify//assert",
        "@com_github_stretchr_testify//require",
        "@io_k8s_api//apps/v1:apps",
        "@io_k8s_api//core/v1:core",
        "@io_k8s_apimachinery//pkg/api/errors",
        "@io_k8s_apimachinery//pkg/apis/meta/v1:meta",
        "@io_k8s_apimachinery//pkg/runtime/schema",
        "@io_k8s_apimachinery//pkg/types",
        "@io_k8s_client_go//kubernetes/scheme",
        "@io_k8s_client_go//rest",
        "@io_k8s_sigs_controller_runtime//pkg/client",
        "@io_k8s_sigs_controller_runtime//pkg/envtest",
        "@io_k8s_sigs_controller_runtime//pkg/log",
        "@io_k8s_sigs_controller_runtime//pkg/log/zap",
    ],
)
