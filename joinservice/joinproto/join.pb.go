// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.1
// source: joinservice/joinproto/join.proto

package joinproto

import (
	context "context"
	components "github.com/edgelesssys/constellation/v2/internal/versions/components"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type IssueJoinTicketRequest struct {
	state                     protoimpl.MessageState `protogen:"open.v1"`
	DiskUuid                  string                 `protobuf:"bytes,1,opt,name=disk_uuid,json=diskUuid,proto3" json:"disk_uuid,omitempty"`
	CertificateRequest        []byte                 `protobuf:"bytes,2,opt,name=certificate_request,json=certificateRequest,proto3" json:"certificate_request,omitempty"`
	IsControlPlane            bool                   `protobuf:"varint,3,opt,name=is_control_plane,json=isControlPlane,proto3" json:"is_control_plane,omitempty"`
	HostPublicKey             []byte                 `protobuf:"bytes,4,opt,name=host_public_key,json=hostPublicKey,proto3" json:"host_public_key,omitempty"`
	HostCertificatePrincipals []string               `protobuf:"bytes,5,rep,name=host_certificate_principals,json=hostCertificatePrincipals,proto3" json:"host_certificate_principals,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *IssueJoinTicketRequest) Reset() {
	*x = IssueJoinTicketRequest{}
	mi := &file_joinservice_joinproto_join_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IssueJoinTicketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IssueJoinTicketRequest) ProtoMessage() {}

func (x *IssueJoinTicketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_joinservice_joinproto_join_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IssueJoinTicketRequest.ProtoReflect.Descriptor instead.
func (*IssueJoinTicketRequest) Descriptor() ([]byte, []int) {
	return file_joinservice_joinproto_join_proto_rawDescGZIP(), []int{0}
}

func (x *IssueJoinTicketRequest) GetDiskUuid() string {
	if x != nil {
		return x.DiskUuid
	}
	return ""
}

func (x *IssueJoinTicketRequest) GetCertificateRequest() []byte {
	if x != nil {
		return x.CertificateRequest
	}
	return nil
}

func (x *IssueJoinTicketRequest) GetIsControlPlane() bool {
	if x != nil {
		return x.IsControlPlane
	}
	return false
}

func (x *IssueJoinTicketRequest) GetHostPublicKey() []byte {
	if x != nil {
		return x.HostPublicKey
	}
	return nil
}

func (x *IssueJoinTicketRequest) GetHostCertificatePrincipals() []string {
	if x != nil {
		return x.HostCertificatePrincipals
	}
	return nil
}

type IssueJoinTicketResponse struct {
	state                    protoimpl.MessageState   `protogen:"open.v1"`
	StateDiskKey             []byte                   `protobuf:"bytes,1,opt,name=state_disk_key,json=stateDiskKey,proto3" json:"state_disk_key,omitempty"`
	MeasurementSalt          []byte                   `protobuf:"bytes,2,opt,name=measurement_salt,json=measurementSalt,proto3" json:"measurement_salt,omitempty"`
	MeasurementSecret        []byte                   `protobuf:"bytes,3,opt,name=measurement_secret,json=measurementSecret,proto3" json:"measurement_secret,omitempty"`
	KubeletCert              []byte                   `protobuf:"bytes,4,opt,name=kubelet_cert,json=kubeletCert,proto3" json:"kubelet_cert,omitempty"`
	ApiServerEndpoint        string                   `protobuf:"bytes,5,opt,name=api_server_endpoint,json=apiServerEndpoint,proto3" json:"api_server_endpoint,omitempty"`
	Token                    string                   `protobuf:"bytes,6,opt,name=token,proto3" json:"token,omitempty"`
	DiscoveryTokenCaCertHash string                   `protobuf:"bytes,7,opt,name=discovery_token_ca_cert_hash,json=discoveryTokenCaCertHash,proto3" json:"discovery_token_ca_cert_hash,omitempty"`
	ControlPlaneFiles        []*ControlPlaneCertOrKey `protobuf:"bytes,8,rep,name=control_plane_files,json=controlPlaneFiles,proto3" json:"control_plane_files,omitempty"`
	KubernetesVersion        string                   `protobuf:"bytes,9,opt,name=kubernetes_version,json=kubernetesVersion,proto3" json:"kubernetes_version,omitempty"`
	KubernetesComponents     []*components.Component  `protobuf:"bytes,10,rep,name=kubernetes_components,json=kubernetesComponents,proto3" json:"kubernetes_components,omitempty"`
	AuthorizedCaPublicKey    []byte                   `protobuf:"bytes,11,opt,name=authorized_ca_public_key,json=authorizedCaPublicKey,proto3" json:"authorized_ca_public_key,omitempty"`
	HostCertificate          []byte                   `protobuf:"bytes,12,opt,name=host_certificate,json=hostCertificate,proto3" json:"host_certificate,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *IssueJoinTicketResponse) Reset() {
	*x = IssueJoinTicketResponse{}
	mi := &file_joinservice_joinproto_join_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IssueJoinTicketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IssueJoinTicketResponse) ProtoMessage() {}

func (x *IssueJoinTicketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_joinservice_joinproto_join_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IssueJoinTicketResponse.ProtoReflect.Descriptor instead.
func (*IssueJoinTicketResponse) Descriptor() ([]byte, []int) {
	return file_joinservice_joinproto_join_proto_rawDescGZIP(), []int{1}
}

func (x *IssueJoinTicketResponse) GetStateDiskKey() []byte {
	if x != nil {
		return x.StateDiskKey
	}
	return nil
}

func (x *IssueJoinTicketResponse) GetMeasurementSalt() []byte {
	if x != nil {
		return x.MeasurementSalt
	}
	return nil
}

func (x *IssueJoinTicketResponse) GetMeasurementSecret() []byte {
	if x != nil {
		return x.MeasurementSecret
	}
	return nil
}

func (x *IssueJoinTicketResponse) GetKubeletCert() []byte {
	if x != nil {
		return x.KubeletCert
	}
	return nil
}

func (x *IssueJoinTicketResponse) GetApiServerEndpoint() string {
	if x != nil {
		return x.ApiServerEndpoint
	}
	return ""
}

func (x *IssueJoinTicketResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *IssueJoinTicketResponse) GetDiscoveryTokenCaCertHash() string {
	if x != nil {
		return x.DiscoveryTokenCaCertHash
	}
	return ""
}

func (x *IssueJoinTicketResponse) GetControlPlaneFiles() []*ControlPlaneCertOrKey {
	if x != nil {
		return x.ControlPlaneFiles
	}
	return nil
}

func (x *IssueJoinTicketResponse) GetKubernetesVersion() string {
	if x != nil {
		return x.KubernetesVersion
	}
	return ""
}

func (x *IssueJoinTicketResponse) GetKubernetesComponents() []*components.Component {
	if x != nil {
		return x.KubernetesComponents
	}
	return nil
}

func (x *IssueJoinTicketResponse) GetAuthorizedCaPublicKey() []byte {
	if x != nil {
		return x.AuthorizedCaPublicKey
	}
	return nil
}

func (x *IssueJoinTicketResponse) GetHostCertificate() []byte {
	if x != nil {
		return x.HostCertificate
	}
	return nil
}

type ControlPlaneCertOrKey struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Data          []byte                 `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ControlPlaneCertOrKey) Reset() {
	*x = ControlPlaneCertOrKey{}
	mi := &file_joinservice_joinproto_join_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ControlPlaneCertOrKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlPlaneCertOrKey) ProtoMessage() {}

func (x *ControlPlaneCertOrKey) ProtoReflect() protoreflect.Message {
	mi := &file_joinservice_joinproto_join_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlPlaneCertOrKey.ProtoReflect.Descriptor instead.
func (*ControlPlaneCertOrKey) Descriptor() ([]byte, []int) {
	return file_joinservice_joinproto_join_proto_rawDescGZIP(), []int{2}
}

func (x *ControlPlaneCertOrKey) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ControlPlaneCertOrKey) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type IssueRejoinTicketRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DiskUuid      string                 `protobuf:"bytes,1,opt,name=disk_uuid,json=diskUuid,proto3" json:"disk_uuid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IssueRejoinTicketRequest) Reset() {
	*x = IssueRejoinTicketRequest{}
	mi := &file_joinservice_joinproto_join_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IssueRejoinTicketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IssueRejoinTicketRequest) ProtoMessage() {}

func (x *IssueRejoinTicketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_joinservice_joinproto_join_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IssueRejoinTicketRequest.ProtoReflect.Descriptor instead.
func (*IssueRejoinTicketRequest) Descriptor() ([]byte, []int) {
	return file_joinservice_joinproto_join_proto_rawDescGZIP(), []int{3}
}

func (x *IssueRejoinTicketRequest) GetDiskUuid() string {
	if x != nil {
		return x.DiskUuid
	}
	return ""
}

type IssueRejoinTicketResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	StateDiskKey      []byte                 `protobuf:"bytes,1,opt,name=state_disk_key,json=stateDiskKey,proto3" json:"state_disk_key,omitempty"`
	MeasurementSecret []byte                 `protobuf:"bytes,2,opt,name=measurement_secret,json=measurementSecret,proto3" json:"measurement_secret,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *IssueRejoinTicketResponse) Reset() {
	*x = IssueRejoinTicketResponse{}
	mi := &file_joinservice_joinproto_join_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IssueRejoinTicketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IssueRejoinTicketResponse) ProtoMessage() {}

func (x *IssueRejoinTicketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_joinservice_joinproto_join_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IssueRejoinTicketResponse.ProtoReflect.Descriptor instead.
func (*IssueRejoinTicketResponse) Descriptor() ([]byte, []int) {
	return file_joinservice_joinproto_join_proto_rawDescGZIP(), []int{4}
}

func (x *IssueRejoinTicketResponse) GetStateDiskKey() []byte {
	if x != nil {
		return x.StateDiskKey
	}
	return nil
}

func (x *IssueRejoinTicketResponse) GetMeasurementSecret() []byte {
	if x != nil {
		return x.MeasurementSecret
	}
	return nil
}

var File_joinservice_joinproto_join_proto protoreflect.FileDescriptor

const file_joinservice_joinproto_join_proto_rawDesc = "" +
	"\n" +
	" joinservice/joinproto/join.proto\x12\x04join\x1a-internal/versions/components/components.proto\"\xf8\x01\n" +
	"\x16IssueJoinTicketRequest\x12\x1b\n" +
	"\tdisk_uuid\x18\x01 \x01(\tR\bdiskUuid\x12/\n" +
	"\x13certificate_request\x18\x02 \x01(\fR\x12certificateRequest\x12(\n" +
	"\x10is_control_plane\x18\x03 \x01(\bR\x0eisControlPlane\x12&\n" +
	"\x0fhost_public_key\x18\x04 \x01(\fR\rhostPublicKey\x12>\n" +
	"\x1bhost_certificate_principals\x18\x05 \x03(\tR\x19hostCertificatePrincipals\"\xf2\x04\n" +
	"\x17IssueJoinTicketResponse\x12$\n" +
	"\x0estate_disk_key\x18\x01 \x01(\fR\fstateDiskKey\x12)\n" +
	"\x10measurement_salt\x18\x02 \x01(\fR\x0fmeasurementSalt\x12-\n" +
	"\x12measurement_secret\x18\x03 \x01(\fR\x11measurementSecret\x12!\n" +
	"\fkubelet_cert\x18\x04 \x01(\fR\vkubeletCert\x12.\n" +
	"\x13api_server_endpoint\x18\x05 \x01(\tR\x11apiServerEndpoint\x12\x14\n" +
	"\x05token\x18\x06 \x01(\tR\x05token\x12>\n" +
	"\x1cdiscovery_token_ca_cert_hash\x18\a \x01(\tR\x18discoveryTokenCaCertHash\x12O\n" +
	"\x13control_plane_files\x18\b \x03(\v2\x1f.join.control_plane_cert_or_keyR\x11controlPlaneFiles\x12-\n" +
	"\x12kubernetes_version\x18\t \x01(\tR\x11kubernetesVersion\x12J\n" +
	"\x15kubernetes_components\x18\n" +
	" \x03(\v2\x15.components.ComponentR\x14kubernetesComponents\x127\n" +
	"\x18authorized_ca_public_key\x18\v \x01(\fR\x15authorizedCaPublicKey\x12)\n" +
	"\x10host_certificate\x18\f \x01(\fR\x0fhostCertificate\"C\n" +
	"\x19control_plane_cert_or_key\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04data\x18\x02 \x01(\fR\x04data\"7\n" +
	"\x18IssueRejoinTicketRequest\x12\x1b\n" +
	"\tdisk_uuid\x18\x01 \x01(\tR\bdiskUuid\"p\n" +
	"\x19IssueRejoinTicketResponse\x12$\n" +
	"\x0estate_disk_key\x18\x01 \x01(\fR\fstateDiskKey\x12-\n" +
	"\x12measurement_secret\x18\x02 \x01(\fR\x11measurementSecret2\xab\x01\n" +
	"\x03API\x12N\n" +
	"\x0fIssueJoinTicket\x12\x1c.join.IssueJoinTicketRequest\x1a\x1d.join.IssueJoinTicketResponse\x12T\n" +
	"\x11IssueRejoinTicket\x12\x1e.join.IssueRejoinTicketRequest\x1a\x1f.join.IssueRejoinTicketResponseB?Z=github.com/edgelesssys/constellation/v2/joinservice/joinprotob\x06proto3"

var (
	file_joinservice_joinproto_join_proto_rawDescOnce sync.Once
	file_joinservice_joinproto_join_proto_rawDescData []byte
)

func file_joinservice_joinproto_join_proto_rawDescGZIP() []byte {
	file_joinservice_joinproto_join_proto_rawDescOnce.Do(func() {
		file_joinservice_joinproto_join_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_joinservice_joinproto_join_proto_rawDesc), len(file_joinservice_joinproto_join_proto_rawDesc)))
	})
	return file_joinservice_joinproto_join_proto_rawDescData
}

var file_joinservice_joinproto_join_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_joinservice_joinproto_join_proto_goTypes = []any{
	(*IssueJoinTicketRequest)(nil),    // 0: join.IssueJoinTicketRequest
	(*IssueJoinTicketResponse)(nil),   // 1: join.IssueJoinTicketResponse
	(*ControlPlaneCertOrKey)(nil),     // 2: join.control_plane_cert_or_key
	(*IssueRejoinTicketRequest)(nil),  // 3: join.IssueRejoinTicketRequest
	(*IssueRejoinTicketResponse)(nil), // 4: join.IssueRejoinTicketResponse
	(*components.Component)(nil),      // 5: components.Component
}
var file_joinservice_joinproto_join_proto_depIdxs = []int32{
	2, // 0: join.IssueJoinTicketResponse.control_plane_files:type_name -> join.control_plane_cert_or_key
	5, // 1: join.IssueJoinTicketResponse.kubernetes_components:type_name -> components.Component
	0, // 2: join.API.IssueJoinTicket:input_type -> join.IssueJoinTicketRequest
	3, // 3: join.API.IssueRejoinTicket:input_type -> join.IssueRejoinTicketRequest
	1, // 4: join.API.IssueJoinTicket:output_type -> join.IssueJoinTicketResponse
	4, // 5: join.API.IssueRejoinTicket:output_type -> join.IssueRejoinTicketResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_joinservice_joinproto_join_proto_init() }
func file_joinservice_joinproto_join_proto_init() {
	if File_joinservice_joinproto_join_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_joinservice_joinproto_join_proto_rawDesc), len(file_joinservice_joinproto_join_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_joinservice_joinproto_join_proto_goTypes,
		DependencyIndexes: file_joinservice_joinproto_join_proto_depIdxs,
		MessageInfos:      file_joinservice_joinproto_join_proto_msgTypes,
	}.Build()
	File_joinservice_joinproto_join_proto = out.File
	file_joinservice_joinproto_join_proto_goTypes = nil
	file_joinservice_joinproto_join_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// APIClient is the client API for API service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type APIClient interface {
	IssueJoinTicket(ctx context.Context, in *IssueJoinTicketRequest, opts ...grpc.CallOption) (*IssueJoinTicketResponse, error)
	IssueRejoinTicket(ctx context.Context, in *IssueRejoinTicketRequest, opts ...grpc.CallOption) (*IssueRejoinTicketResponse, error)
}

type aPIClient struct {
	cc grpc.ClientConnInterface
}

func NewAPIClient(cc grpc.ClientConnInterface) APIClient {
	return &aPIClient{cc}
}

func (c *aPIClient) IssueJoinTicket(ctx context.Context, in *IssueJoinTicketRequest, opts ...grpc.CallOption) (*IssueJoinTicketResponse, error) {
	out := new(IssueJoinTicketResponse)
	err := c.cc.Invoke(ctx, "/join.API/IssueJoinTicket", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) IssueRejoinTicket(ctx context.Context, in *IssueRejoinTicketRequest, opts ...grpc.CallOption) (*IssueRejoinTicketResponse, error) {
	out := new(IssueRejoinTicketResponse)
	err := c.cc.Invoke(ctx, "/join.API/IssueRejoinTicket", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// APIServer is the server API for API service.
type APIServer interface {
	IssueJoinTicket(context.Context, *IssueJoinTicketRequest) (*IssueJoinTicketResponse, error)
	IssueRejoinTicket(context.Context, *IssueRejoinTicketRequest) (*IssueRejoinTicketResponse, error)
}

// UnimplementedAPIServer can be embedded to have forward compatible implementations.
type UnimplementedAPIServer struct {
}

func (*UnimplementedAPIServer) IssueJoinTicket(context.Context, *IssueJoinTicketRequest) (*IssueJoinTicketResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IssueJoinTicket not implemented")
}
func (*UnimplementedAPIServer) IssueRejoinTicket(context.Context, *IssueRejoinTicketRequest) (*IssueRejoinTicketResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IssueRejoinTicket not implemented")
}

func RegisterAPIServer(s *grpc.Server, srv APIServer) {
	s.RegisterService(&_API_serviceDesc, srv)
}

func _API_IssueJoinTicket_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IssueJoinTicketRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).IssueJoinTicket(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/join.API/IssueJoinTicket",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).IssueJoinTicket(ctx, req.(*IssueJoinTicketRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_IssueRejoinTicket_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IssueRejoinTicketRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).IssueRejoinTicket(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/join.API/IssueRejoinTicket",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).IssueRejoinTicket(ctx, req.(*IssueRejoinTicketRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _API_serviceDesc = grpc.ServiceDesc{
	ServiceName: "join.API",
	HandlerType: (*APIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "IssueJoinTicket",
			Handler:    _API_IssueJoinTicket_Handler,
		},
		{
			MethodName: "IssueRejoinTicket",
			Handler:    _API_IssueRejoinTicket_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "joinservice/joinproto/join.proto",
}
