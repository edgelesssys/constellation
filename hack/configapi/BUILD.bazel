load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
load("//bazel/go:go_test.bzl", "go_test")
load("//bazel/sh:def.bzl", "sh_template")

go_library(
    name = "configapi_lib",
    srcs = [
        "delete.go",
        "main.go",
    ],
    importpath = "github.com/edgelesssys/constellation/v2/hack/configapi",
    visibility = ["//visibility:private"],
    deps = [
        "//internal/api/attestationconfigapi",
        "//internal/constants",
        "//internal/logger",
        "//internal/staticupload",
        "@com_github_spf13_cobra//:cobra",
        "@org_uber_go_zap//:zap",
    ],
)

go_binary(
    name = "configapi",
    embed = [":configapi_lib"],
    visibility = ["//visibility:public"],
)

go_test(
    name = "configapi_test",
    srcs = [
        "delete_test.go",
        "main_test.go",
    ],
    embed = [":configapi_lib"],
    deps = [
        "//internal/api/attestationconfigapi",
        "@com_github_stretchr_testify//assert",
        "@com_github_stretchr_testify//require",
    ],
)

sh_template(
    name = "configapi_e2e_test",
    data = [":configapi"],
    substitutions = {
        "@@CONFIGAPI_CLI@@": "$(rootpath :configapi)",
    },
    template = "e2e/test.sh.in",
)
