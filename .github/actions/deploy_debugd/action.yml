name: Deploy debugd
description: Deploy the Constellation debug daemon to the cluster.

inputs:
  test:
    description: "The e2e test payload."
    required: true
  azureClusterCreateCredentials:
    description: "Azure credentials authorized to create a Constellation cluster."
    required: true
  azureIAMCreateCredentials:
    description: "Azure credentials authorized to create an IAM configuration."
    required: true

runs:
  using: "composite"
  steps:
    - name: Login to Azure (IAM service principal)
      if: inputs.cloudProvider == 'azure' && inputs.isDebugImage == 'true'
      uses: ./.github/actions/login_azure
      with:
        azure_credentials: ${{ inputs.azureIAMCreateCredentials }}

    - name: Add Azure Keyvault access role
      if: inputs.cloudProvider == 'azure' && inputs.isDebugImage == 'true'
      shell: bash
      run: |
        UAMI=$(yq eval ".provider.azure.userAssignedIdentity | upcase" constellation-conf.yaml)
        PRINCIPAL_ID=$(az identity list | yq ".[] | select(.id | test(\"(?i)$UAMI\"; \"g\")) | .principalId")
        az role assignment create --role "Key Vault Secrets User" \
          --assignee "$PRINCIPAL_ID" \
          --scope /subscriptions/0d202bbb-4fa7-4af8-8125-58c269a05435/resourceGroups/e2e-test-creds/providers/Microsoft.KeyVault/vaults/opensearch-creds

    - name: Login to Azure (Cluster service principal)
      if: inputs.cloudProvider == 'azure' && inputs.isDebugImage == 'true'
      uses: ./.github/actions/login_azure
      with:
        azure_credentials: ${{ inputs.azureClusterCreateCredentials }}

    - name: Cdbg deploy
      shell: bash
      run: |
        echo "::group::cdbg deploy"
        chmod +x $GITHUB_WORKSPACE/build/cdbg
        cdbg deploy \
          --bootstrapper "${{ github.workspace }}/build/bootstrapper" \
          --upgrade-agent "${{ github.workspace }}/build/upgrade-agent" \
          --info logcollect=true \
          --info logcollect.github.actor="${{ github.triggering_actor }}" \
          --info logcollect.github.workflow="${{ github.workflow }}" \
          --info logcollect.github.run-id="${{ github.run_id }}" \
          --info logcollect.github.run-attempt="${{ github.run_attempt }}" \
          --info logcollect.github.ref-name="${{ github.ref_name }}" \
          --info logcollect.github.sha="${{ github.sha }}" \
          --info logcollect.github.runner-os="${{ runner.os }}" \
          --info logcollect.github.e2e-test-payload="${{ inputs.test }}" \
          --info logcollect.github.is-debug-cluster=false \
          --info logcollect.deployment-type="debugd" \
          --verbosity=-1 \
          --force
        echo "::endgroup::"
