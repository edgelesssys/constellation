name: Build apko image
description: Build an apko image based on a supplied .yaml file

inputs:
  apkoConfig:
    description: "Path to the apko .yaml config file. If left empty, all images will be built."
    required: false
  registry:
    description: "Container registry to use"
    default: "ghcr.io"
    required: true
  githubToken:
    description: "GitHub authorization token"
    required: true

# Linux runner only (podman required)
runs:
  using: "composite"
  steps:
    - name: Install podman
      shell: bash
      run: |
        sudo apt-get update
        sudo apt-get install -y podman

    - name: Log in to the Container registry
      id: podman-login
      uses: redhat-actions/podman-login@v1
      with:
        registry: ${{ inputs.registry }}
        username: ${{ github.actor }}
        password: ${{ inputs.githubToken }}

    - name: Build apko images
      shell: bash
      run: |
        if [ -z "${{ inputs.apkoConfig }}" ]; then
          echo "Building all images in image"
          for imageConfig in image/apko/*.yaml; do
            echo "Building image for $imageConfig"

            imageName=$(basename $imageConfig | cut -d. -f1 )
            registry=${{ inputs.registry }}/edgelesssys/apko-${imageName}
            outTar=$imageName.tar

            podman run -v "$PWD":/work cgr.dev/chainguard/apko build $imageConfig $registry $outTar
            podman load < $outTar
            podman push $registry

          done
        else
          echo "Building image for ${{ inputs.apkoConfig }}"

          imageName=$(basename ${{ inputs.apkoConfig }} | cut -d. -f1 )
          registry=${{ inputs.registry }}/edgelesssys/apko-${imageName}
          outTar=$imageName.tar

          podman run -v "$PWD":/work cgr.dev/chainguard/apko build ${{ inputs.apkoConfig }} $registry $outTar
          podman load < $outTar
          podman push $registry
        fi
