name: Install CSI drivers
description: Installs the Constellation CSI drivers depending on the cloud provider.

inputs:
  cloudProvider:
    description: |
      Cloud provider for the Constellation cluster.
      Either 'gcp' or 'azure'.
    required: true
  kubeconfig:
    description: "The kubeconfig of the cluster to test."
    required: true

runs:
  using: composite
  steps:
    - name: Install Constellation GCP CSI driver and create storage class
      if: inputs.cloudProvider == 'gcp'
      shell: bash
      run: |
        kubectl apply -k github.com/edgelesssys/constellation-gcp-compute-persistent-disk-csi-driver/deploy/kubernetes/overlays/edgeless/latest
        kubectl wait -n kube-system deployments csi-gce-pd-controller --for condition=available
        kubectl apply -f .github/actions/install_csi_drivers/gcp_sc.yml
      env:
        KUBECONFIG: ${{ inputs.kubeconfig }}

    - name: Install Constellation Azure CSI driver and create storage class
      if: inputs.cloudProvider == 'azure'
      shell: bash
      run: |
        helm install azuredisk-csi-driver https://raw.githubusercontent.com/edgelesssys/constellation-azuredisk-csi-driver/main/charts/edgeless/latest/azuredisk-csi-driver.tgz --namespace kube-system --set linux.distro=fedora --set controller.replicas=1
        kubectl wait -n kube-system deployments csi-azuredisk-controller --for condition=available --timeout=300s
        kubectl apply -f .github/actions/install_csi_drivers/azure_sc.yml
      env:
        KUBECONFIG: ${{ inputs.kubeconfig }}
