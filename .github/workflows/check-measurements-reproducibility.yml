name: Check measurements reproducibility
on:
  release:
    types: [created]
  workflow_dispatch:

jobs:
  check-reproducibility:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ github.event.release.tag_name }}
      - name: Set up bazel
        uses: ./.github/actions/setup_bazel_nix
        with:
          useCache: "false"
          nixTools: |
            systemdUkify
            jq
            jd-diff-patch
            moreutils
      - name: Build images and produce measurements
        run: |
          set -euo pipefail
          shopt -s extglob

          # Build required binaries
          bazel build //image/system:stable
          bazel build //image/measured-boot/cmd
          buildPath="$PWD/bazel-bin/image"
          cd $(mktemp -d)

          echo "Downloading release measurements"
          curl -O https://cdn.confidential.cloud/constellation/v2/ref/-/stream/stable/v2.20.0/image/measurements.json

          # compare all measurements with our own
          for directory in $buildPath/system/!(mkosi_wrapper.sh); do
            dirname="$(basename $directory)"
            csp="$(echo $dirname | cut -d_ -f1)"
            attestationVariant="$(echo $dirname | cut -d_ -f2)"

            echo "Comparing measurements of CSP $csp with attestation variant $attestationVariant"
            jq --arg attestation_variant "$attestationVariant" --arg csp "$csp" \
              '.list.[] | select(.attestationVariant == $attestation_variant) | select((.csp | ascii_downcase) == $csp) | .measurements | walk(if (type=="object" and (.warnOnly or .expected == "0000000000000000000000000000000000000000000000000000000000000000")) then del(.) else . end) | del(..|nulls) | del(.[] .warnOnly)' \
              measurements.json > their-measurements.json
            sudo env "PATH=$PATH" "$buildPath/measured-boot/cmd/cmd_/cmd" "$directory/constellation" ./own-measurements.json
            jq '.measurements | walk(if (type == "object" and .expected == "0000000000000000000000000000000000000000000000000000000000000000") then del(.) else . end) | del(..|nulls)' \
              own-measurements.json | sponge ./own-measurements.json

            echo "Their measurements:"
            cat their-measurements.json | ts "  "
            echo "Own measurements:"
            cat own-measurements.json | ts "  "

            jd ./their-measurements.json ./own-measurements.json
          done
