name: e2e Test Manual (macOS CLI)

on:
  workflow_dispatch:
    inputs:
      workerNodesCount:
        description: "Number of worker nodes to spawn."
        default: "2"
        required: true
      controlNodesCount:
        description: "Number of control-plane nodes to spawn."
        default: "3"
        required: true
      cloudProvider:
        description: "Which cloud provider to use."
        type: choice
        options:
          - "gcp"
          - "azure"
        default: "gcp"
        required: true
      sonobuoyTestSuiteCmd:
        description: "Which tests should be run? Check README for guidance!"
        default: "--mode quick"
        required: true
      kubernetesVersion:
        description: "Kubernetes version to create the cluster from."
        default: "1.24"
        required: true
      coreosImage:
        description: "CoreOS image (full path). Examples are in internal/config/config.go."
        default: "debug-latest"
        type: string
        required: true
      isDebugImage:
        description: "Is CoreOS image a debug image?"
        type: boolean
        default: true
        required: false
      machineType:
        description: "Override VM machine type. Leave as 'default' or empty to use the default VM type for the selected cloud provider."
        type: string
        default: "default"
        required: false

env:
  ARM_CLIENT_ID: "b657a00e-813a-4dc7-9b09-fa498a254d71"
  ARM_CLIENT_SECRET: ${{ secrets.AZURE_E2E_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: "0d202bbb-4fa7-4af8-8125-58c269a05435"
  ARM_TENANT_ID: "adb650a8-5da3-4b15-b4b0-3daf65ff7626"

jobs:
  build-bootstrapper-linux:
    name: "Build bootstrapper (debug image)"
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.isDebugImage == 'true' }}
    steps:
      - name: Setup Go environment
        uses: actions/setup-go@c4a742cab115ed795e34d4513e2cf7d472deb55f # tag=v3.3.1
        if: ${{ github.event.steps.check-bootstrapper-cache.cache-hit != 'true'}}
        with:
          go-version: "1.19.2"

      - name: Check out repository
        if: ${{ github.event.steps.check-bootstrapper-cache.cache-hit != 'true'}}
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # tag=v3.1.0

      - name: Build bootstrapper
        if: ${{ github.event.steps.check-bootstrapper-cache.cache-hit != 'true'}}
        uses: ./.github/actions/build_bootstrapper

      - name: Upload bootstrapper to cache
        if: ${{ github.event.steps.check-bootstrapper-cache.cache-hit != 'true'}}
        uses: actions/cache@9b0c1fce7a93df8e3bb8926b0d6e9d89e92f20a7 # tag=v3.0.11
        with:
          key: bootstrapper-${{ github.sha }}
          path: "build/bootstrapper"

  e2e-test-manual-darwin:
    name: "e2e Test Manual (macOS)"
    runs-on: macos-12
    needs: build-bootstrapper-linux
    if: ${{ always() && !cancelled() && (needs.build-bootstrapper-linux.result == 'success' || needs.build-bootstrapper-linux.result == 'skipped') }}
    steps:
      - name: Install the basics
        shell: bash
        run: brew install coreutils

      - name: Check out repository
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # tag=v3.1.0

      - name: Setup Go environment
        uses: actions/setup-go@c4a742cab115ed795e34d4513e2cf7d472deb55f # tag=v3.3.1
        with:
          go-version: "1.19.2"

      - name: Login to Azure
        if: ${{ github.event.inputs.cloudProvider == 'azure' }}
        uses: ./.github/actions/azure_login
        with:
          azure_credentials: ${{ secrets.AZURE_E2E_CREDENTIALS }}

      - name: Create Azure resource group
        id: az_resource_group_gen
        if: ${{ github.event.inputs.cloudProvider == 'azure' }}
        shell: bash
        run: |
          uuid=$(uuidgen)
          name=e2e-test-${uuid%%-*}
          az group create --location westus --name $name --tags e2e
          echo "res_group_name=$name" >> $GITHUB_OUTPUT

      - name: Set up gcloud CLI
        if: ${{ github.event.inputs.cloudProvider == 'gcp' }}
        uses: google-github-actions/setup-gcloud@ee9693ff89cdf73862b8a13988f6a71070e8fc58 # tag=v0.6.2

      - name: Run manual E2E test
        uses: ./.github/actions/e2e_test
        with:
          workerNodesCount: ${{ github.event.inputs.workerNodesCount }}
          controlNodesCount: ${{ github.event.inputs.controlNodesCount }}
          cloudProvider: ${{ github.event.inputs.cloudProvider }}
          machineType: ${{ github.event.inputs.machineType }}
          gcp_service_account_json: ${{ secrets.GCP_SERVICE_ACCOUNT }}
          gcpClusterServiceAccountKey: ${{ secrets.GCP_CLUSTER_SERVICE_ACCOUNT }}
          sonobuoyTestSuiteCmd: ${{ github.event.inputs.sonobuoyTestSuiteCmd }}
          kubernetesVersion: ${{ github.event.inputs.kubernetesVersion }}
          azureClientSecret: ${{ secrets.AZURE_E2E_CLIENT_SECRET }}
          azureResourceGroup: ${{ steps.az_resource_group_gen.outputs.res_group_name }}
          coreosImage: ${{ github.event.inputs.coreosImage }}
          isDebugImage: ${{ github.event.inputs.isDebugImage }}

      - name: Always terminate cluster
        if: always()
        continue-on-error: true
        uses: ./.github/actions/constellation_destroy

      - name: Notify teams channel
        if: ${{ failure() && github.ref == 'refs/heads/main' }}
        run: |
          brew install gettext && brew link --force gettext
          export TEAMS_JOB_NAME="${{ github.event.inputs.cloudProvider }} (macOS, manual)"
          export TEAMS_RUN_ID=${{ github.run_id }}
          envsubst < teams-payload.json > to-be-send.json
          curl                                          \
            -H "Content-Type: application/json"         \
            -d @to-be-send.json                         \
            "${{  secrets.MS_TEAMS_WEBHOOK_URI }}"
        shell: bash
        working-directory: .github/actions/e2e_test

      - name: Always destroy Azure resource group
        if: ${{ always() && github.event.inputs.cloudProvider == 'azure' }}
        shell: bash
        run: |
          az group delete \
            --name ${{ steps.az_resource_group_gen.outputs.res_group_name }} \
            --force-deletion-types Microsoft.Compute/virtualMachineScaleSets \
            --force-deletion-types Microsoft.Compute/virtualMachines \
            --no-wait \
            --yes
